{{
    _ ARGS:
        dest-dir: Destination directory to install .NET runtime
        install-method: Method of installation. Can be "download", "download-and-install", or "copy-and-install"
        add-symlink (optional): If set, adds a symlink to the dotnet executable
        use-local-version-var (optional): Whether to define a local variable for the .NET runtime version
            instead of referencing the environment variable.
        is-internal (optional): Whether the Dockerfile is targeting an internal build of the product.
        installer-stage (optional): Name of the Dockerfile stage responsible for installation
        is-composite-runtime (optional): Whether to install aspnetcore composite version ^

    set dotnetVersion to join(slice(split(PRODUCT_VERSION, "."), 0, 2), ".") ^
    set productVersion to VARIABLES[cat("dotnet|", dotnetVersion, "|product-version")] ^
    set buildVersion to
        when(ARGS["is-composite-runtime"],
            VARIABLES[cat("aspnet|", dotnetVersion, "|build-version")],
            VARIABLES[cat("runtime|", dotnetVersion, "|build-version")]) ^

    set isAlpine to find(OS_VERSION, "alpine") >= 0 ^
    set platform to when(isAlpine, "linux-musl", "linux") ^

    set sdkBuildVersion to VARIABLES[cat("sdk|", dotnetVersion, "|build-version")] ^
    set isStableBranding to find(sdkBuildVersion, "-servicing") >= 0 || find(sdkBuildVersion, "-rtm") >= 0 ^

    _ Set versions explicitly, and dynamically replace them based on whether they match the env/local variables. ^
    _ For preview (non-stable) versions, the full build version is always in the file name. ^
    set fileVersion to when(isStableBranding, productVersion, buildVersion) ^
    set versionDir to buildVersion ^

    set versionVariable to
        when(ARGS["is-composite-runtime"],
            when(ARGS["use-local-version-var"],
                "aspnetcore_version",
                "ASPNET_VERSION"),
            when(ARGS["use-local-version-var"],
                "dotnet_version",
                "DOTNET_VERSION")) ^

    set versionVariableValue to buildVersion ^
    if (versionDir = versionVariableValue):{{
        set versionDir to cat("$", versionVariable)
    }}^
    if (fileVersion = versionVariableValue):{{
        set fileVersion to cat("$", versionVariable)
    }}^

    set baseUrl to VARIABLES[cat("dotnet|", dotnetVersion, "|base-url|", VARIABLES["branch"])] ^
    set downloadUrl to
        when(ARGS["is-composite-runtime"],
            cat(baseUrl, "/aspnetcore/Runtime/", versionDir, "/aspnetcore-runtime-composite-", fileVersion, "-", platform, "-", ARCH_SHORT, ".tar.gz"),
            cat(baseUrl, "/Runtime/",            versionDir, "/dotnet-runtime-",               fileVersion, "-", platform, "-", ARCH_SHORT, ".tar.gz")) ^
    set sha to
        when(ARGS["is-composite-runtime"],
            VARIABLES[join(["aspnet-composite", dotnetVersion, platform, ARCH_SHORT, "sha"], "|")],
            VARIABLES[join(["runtime",          dotnetVersion, platform, ARCH_SHORT, "sha"], "|")]) ^

    set files to
        [
            [
                "filename": "dotnet.tar.gz",
                "url": downloadUrl,
                "sha": sha,
                "sha-var-name": "dotnet_sha512"
            ]
        ] ^

    set copyEnabled to ARGS["install-method"] = "copy-and-install" ^
    set downloadEnabled to ARGS["install-method"] = "download" || ARGS["install-method"] = "download-and-install" ^
    set installEnabled to ARGS["install-method"] = "download-and-install" || ARGS["install-method"] = "copy-and-install"
}}{{
if copyEnabled:{{InsertTemplate("../Dockerfile.linux.copy-files",
    [
        "files": files,
        "srcStage": ARGS["installer-stage"],
        "destination": ""
    ])
}}
}}RUN {{if ARGS["use-local-version-var"]:{{versionVariable}}={{versionVariableValue}} \
    && }}{{InsertTemplate("../Dockerfile.linux.download-and-install",
        [
            "files": files,
            "skip-download": !downloadEnabled,
            "skip-install": !installEnabled,
            "install-dir": ARGS["dest-dir"],
            "create-install-dir": "true"
        ], "    ")}}{{if ARGS["add-symlink"]: \
    && {{InsertTemplate("Dockerfile.linux.symlink")}}}}
