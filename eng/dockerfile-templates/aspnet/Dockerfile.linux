{{
    set dotnetVersion to join(slice(split(PRODUCT_VERSION, "."), 0, 2), ".") ^
    set isAlpine to find(OS_VERSION, "alpine") >= 0 ^
    set isFullMariner to defined(match(OS_VERSION, "^cbl-mariner\d+\.\d+$")) ^
    set isDistrolessMariner to defined(match(OS_VERSION, "^cbl-mariner\d+\.\d+-distroless$")) ^
    set baseUrl to VARIABLES[cat("base-url|", dotnetVersion, "|", VARIABLES["branch"])] ^
    set isInternal to find(baseUrl, "msrc") >= 0 || find(baseUrl, "internal") >= 0 ^
    set isSingleStage to (dotnetVersion = "3.1" || isAlpine || isFullMariner) && !isInternal ^
    set archTagSuffix to when(dotnetVersion != "3.1" || ARCH_VERSIONED != "amd64", ARCH_TAG_SUFFIX, "") ^
    set runtimeBaseTag to
        cat("$REPO:", VARIABLES[cat("dotnet|", dotnetVersion, "|product-version")], "-", OS_VERSION, archTagSuffix) ^
    set dotnetVersion to join(slice(split(PRODUCT_VERSION, "."), 0, 2), ".") ^
    set installerImageTag to when(isDistrolessMariner,
        cat(
            "mcr.microsoft.com/cbl-mariner/base/core:",
            OS_VERSION_NUMBER),
        when(isAlpine || isFullMariner,
            runtimeBaseTag,
            cat(ARCH_VERSIONED, "/buildpack-deps:", OS_VERSION_BASE, "-curl"))) ^
    set copyFromSrcPath to when(isDistrolessMariner, "/dotnet", "/shared/Microsoft.AspNetCore.App") ^
    set copyFromDstPath to when(isDistrolessMariner, "/usr/share/dotnet", "/usr/share/dotnet/shared/Microsoft.AspNetCore.App")
}}ARG REPO=mcr.microsoft.com/dotnet/runtime{{if isSingleStage:
{{

    _ SINGLE STAGE

}}FROM {{runtimeBaseTag}}
{{if isAlpine:
{{InsertTemplate("../Dockerfile.alpine.invariant-mode")}}
}}{{if dotnetVersion != "3.1":
{{InsertTemplate("Dockerfile.envs")}}
}}
# Install ASP.NET Core
{{InsertTemplate("Dockerfile.linux.install-aspnet",
    [
        "install-method": "download-and-install",
        "use-local-version-var": dotnetVersion = "3.1"
    ])}}^else:
{{

    _ MULTI STAGE

}}
# Installer image
FROM {{installerImageTag}} AS installer
{{if isInternal:
ARG SAS_QUERY_STRING
}}{{if isDistrolessMariner:
{{InsertTemplate("../Dockerfile.linux.distroless-mariner-installer-prereqs")}}
}}
# Retrieve ASP.NET Core
{{InsertTemplate("Dockerfile.linux.install-aspnet",
    [
        "install-method": when(isInternal && isFullMariner, "download", "download-and-install"),
        "use-local-version-var": "true",
        "is-internal": isInternal,
        "url-suffix": when(isInternal, "$SAS_QUERY_STRING", "")
    ])}}


# ASP.NET Core image
FROM {{runtimeBaseTag}}

{{InsertTemplate("Dockerfile.envs")}}
{{if isInternal && isFullMariner:
{{InsertTemplate("Dockerfile.linux.install-aspnet",
    [
        "install-method": "copy-and-install",
        "is-internal": isInternal,
        "url-suffix": when(isInternal, "$SAS_QUERY_STRING", ""),
        "installer-stage": "installer"
    ])}}^else:
COPY --from=installer ["{{copyFromSrcPath}}", "{{copyFromDstPath}}"]}}}}
