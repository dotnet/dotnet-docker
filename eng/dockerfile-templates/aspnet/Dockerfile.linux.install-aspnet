{{
    set dotnetVersion to join(slice(split(PRODUCT_VERSION, "."), 0, 2), ".") ^
    set productVersion to VARIABLES[cat("dotnet|", dotnetVersion, "|product-version")] ^
    set buildVersion to VARIABLES[cat("aspnet|", dotnetVersion, "|build-version")] ^

    set isFullAzureLinux to defined(match(OS_VERSION, "^cbl-mariner\d+\.\d+$")) ^
    set isDistroless to find(OS_VERSION, "distroless") >= 0 || find(OS_VERSION, "chiseled") >= 0 ^
    set isAlpine to find(OS_VERSION, "alpine") >= 0 ^
    set platform to when(isAlpine, "linux-musl", "linux") ^

    set sdkBuildVersion to VARIABLES[cat("sdk|", dotnetVersion, "|build-version")] ^
    set isStableBranding to find(sdkBuildVersion, "-servicing") >= 0 || find(sdkBuildVersion, "-rtm") >= 0 ^

    _ Set versions explicitly, and dynamically replace them based on whether they match the env/local variables. ^
    _ For preview (non-stable) versions, the full build version is always in the file name. ^
    set fileVersion to when(isStableBranding, productVersion, buildVersion) ^
    set versionDir to buildVersion ^

    set versionVariable to "aspnetcore_version" ^

    set versionVariableValue to buildVersion ^
    if (versionDir = versionVariableValue):{{
        set versionDir to cat("$", versionVariable)
    }}^
    if (fileVersion = versionVariableValue):{{
        set fileVersion to cat("$", versionVariable)
    }}^

    set baseUrl to VARIABLES[cat("dotnet|", dotnetVersion, "|base-url|", VARIABLES["branch"])] ^
    set downloadUrl to cat(baseUrl, "/aspnetcore/Runtime/", versionDir, "/aspnetcore-runtime-", fileVersion, "-", platform, "-", ARCH_SHORT, ".tar.gz") ^
    set sha to VARIABLES[join(["aspnet", dotnetVersion, platform, ARCH_SHORT, "sha"], "|")]

}}RUN {{versionVariable}}={{versionVariableValue}} \
    && {{InsertTemplate("../Dockerfile.linux.download-dotnet", [
        "download-url": downloadUrl,
        "out-file": "aspnetcore.tar.gz",
        "extract-to": "/dotnet",
        "extract-paths": ["./shared/Microsoft.AspNetCore.App"],
        "sha-var-name": "aspnetcore_sha512",
        "sha": sha
    ], "    ")}}
