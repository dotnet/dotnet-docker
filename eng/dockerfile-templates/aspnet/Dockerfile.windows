{{
    set dotnetVersion to join(slice(split(PRODUCT_VERSION, "."), 0, 2), ".") ^
    set isServerCore to find(OS_VERSION, "windowsservercore") >= 0 ^

    set baseUrl to VARIABLES[cat("dotnet|", dotnetVersion, "|base-url|", VARIABLES["branch"])] ^
    set isInternal to find(baseUrl, "artifacts.visualstudio.com") >= 0 ^
    set isSingleStage to (find(OS_VERSION, "windowsservercore") >= 0 && !isInternal) ^

    set installerStageFromImage to cat("mcr.microsoft.com/windows/servercore:", OS_VERSION_NUMBER, "-amd64") ^

    set runtimeStageTag to VARIABLES[cat("dotnet|", dotnetVersion, "|fixed-tag")] ^
    set runtimeStageFromImage to cat("$REPO:", runtimeStageTag, "-", OS_VERSION)

}}# escape=`

ARG REPO=mcr.microsoft.com/dotnet/runtime
{{if isSingleStage:{{

    _ SINGLE STAGE

}}FROM {{runtimeStageFromImage}}

{{InsertTemplate("Dockerfile.envs", ["is-internal": isInternal])}}

{{InsertTemplate("Dockerfile.windows.install-aspnet")}}^else:
{{

    _ MULTI STAGE

}}# Installer image
FROM {{installerStageFromImage}} AS installer
{{if isInternal:
ARG ACCESSTOKEN
}}
{{InsertTemplate("Dockerfile.windows.install-aspnet",
    [
        "use-local-version-var": "true",
        "is-internal": isInternal
    ])}}


# ASP.NET Core image
FROM {{runtimeStageFromImage}}

{{InsertTemplate("Dockerfile.envs", ["is-internal": isInternal])}}

COPY --from=installer ["/dotnet/shared/Microsoft.AspNetCore.App", "/Program Files/dotnet/shared/Microsoft.AspNetCore.App"]}}
