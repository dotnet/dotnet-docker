{{
    set dotnetVersion to join(slice(split(PRODUCT_VERSION, "."), 0, 2), ".") ^

    set baseUrl to VARIABLES[cat("dotnet|", dotnetVersion, "|base-url|", VARIABLES["branch"])] ^
    set isInternal to find(baseUrl, "dotnetstage") >= 0 ^

    set installerStageFromImage to cat("mcr.microsoft.com/windows/servercore:", OS_VERSION_NUMBER, "-amd64") ^

    set runtimeStageTag to VARIABLES[cat("dotnet|", dotnetVersion, "|fixed-tag")] ^
    set runtimeStageFromImage to cat("$REPO:", runtimeStageTag, "-", OS_VERSION)

}}# escape=`

ARG REPO=mcr.microsoft.com/dotnet/runtime

# Installer image
FROM {{installerStageFromImage}} AS installer
{{if isInternal:
ARG ACCESSTOKEN
}}
# Install ASP.NET Core Runtime
RUN powershell -Command `
        $ErrorActionPreference = 'Stop'; `
        $ProgressPreference = 'SilentlyContinue'; `
        `
        {{InsertTemplate("../Dockerfile.download-dotnet", [
            "product": "aspnet",
            "extract-to": "dotnet",
            "extract-paths": ["./shared/Microsoft.AspNetCore.App"]
        ], "        ")}}


# ASP.NET Core image
FROM {{runtimeStageFromImage}}

{{InsertTemplate("Dockerfile.envs", ["is-internal": isInternal])}}

COPY --from=installer ["/dotnet/shared/Microsoft.AspNetCore.App", "/Program Files/dotnet/shared/Microsoft.AspNetCore.App"]
