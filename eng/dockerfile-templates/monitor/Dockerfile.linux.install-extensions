{{
    set monitorMajorMinor to join(slice(split(PRODUCT_VERSION, "."), 0, 2), ".") ^
    set buildVersion to VARIABLES[cat("monitor|", monitorMajorMinor, "|build-version")] ^
    set monitorVersionVariable to when(find(buildVersion, '-rtm') >= 0 || find(buildVersion, '-servicing') >= 0, "product-version", "build-version") ^
    set monitorVersion to VARIABLES[cat("monitor|", monitorMajorMinor, "|", monitorVersionVariable)] ^
    set versionFolder to when(buildVersion != monitorVersion, buildVersion, '$dotnet_monitor_extension_version') ^
    set monitorBaseUrl to cat(VARIABLES[cat("monitor|", monitorMajorMinor, "|base-url|", VARIABLES["branch"])], "/diagnostics/monitor/", versionFolder, "/") ^
    set files to [
        [
            "filename": "dotnet-monitor-egress-azureblobstorage.tar.gz",
            "url": cat(monitorBaseUrl, "dotnet-monitor-egress-azureblobstorage-$dotnet_monitor_extension_version-linux-", ARCH_SHORT, ".tar.gz"),
            "sha": VARIABLES[join(["monitor-ext-azureblobstorage", monitorMajorMinor, "linux", ARCH_SHORT, "sha"], "|")],
            "sha-var-name": "dotnet_monitor_extension_sha512"
        ],
        [
            "filename": "dotnet-monitor-egress-s3storage.tar.gz",
            "url": cat(monitorBaseUrl, "dotnet-monitor-egress-s3storage-$dotnet_monitor_extension_version-linux-", ARCH_SHORT, ".tar.gz"),
            "sha": VARIABLES[join(["monitor-ext-s3storage", monitorMajorMinor, "linux", ARCH_SHORT, "sha"], "|")],
            "sha-var-name": "dotnet_monitor_extension_sha512"
        ]
    ]
}}RUN dotnet_monitor_extension_version={{monitorVersion}} \
    && {{InsertTemplate("../Dockerfile.linux.download-and-install",
        [
            "files": files,
            "install-dir": "/app",
            "create-install-dir": "true"
        ], "    ")}}
