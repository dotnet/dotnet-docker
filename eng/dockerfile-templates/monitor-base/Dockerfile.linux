{{
    _ .NET major version matches the major version of dotnet-monitor ^
    set dotnetMajor to split(PRODUCT_VERSION, ".")[0] ^
    set dotnetMajorMinor to cat(dotnetMajor, ".0") ^
    set monitorMajor to split(PRODUCT_VERSION, ".")[0] ^
    set monitorMajorMinor to join(slice(split(PRODUCT_VERSION, "."), 0, 2), ".") ^
    set buildVersion to VARIABLES[cat("monitor|", monitorMajorMinor, "|build-version")] ^
    set monitorVersionVariable to when(find(buildVersion, '-rtm') >= 0 || find(buildVersion, '-servicing') >= 0, "product-version", "build-version") ^
    set monitorVersion to VARIABLES[cat("monitor|", monitorMajorMinor, "|", monitorVersionVariable)] ^
    set versionFolder to when(buildVersion != monitorVersion, buildVersion, '$dotnet_monitor_version') ^
    set monitorBaseUrl to cat(VARIABLES[cat("monitor|", monitorMajorMinor, "|base-url|", VARIABLES["branch"])], "/diagnostics/monitor/", versionFolder, "/") ^
    set monitorBaseChecksumUrl to cat(VARIABLES[cat("monitor|", monitorMajorMinor, "|base-url|checksums|", VARIABLES["branch"])], "/diagnostics/monitor/", versionFolder, "/") ^
    set isAzureLinux to find(OS_VERSION, "mariner") >= 0 || find(OS_VERSION, "azurelinux") >=0 ^
    set aspnetBaseTag to
        cat("$REPO:", VARIABLES[cat("dotnet|", dotnetMajorMinor, "|product-version")], "-", OS_VERSION, ARCH_TAG_SUFFIX) ^
    set osVersionBase to match(OS_VERSION, ".+(?=.*-)")[0] ^
    set isInternal to find(monitorBaseUrl, "dotnetstage") >= 0 ^
    set installerImageTag to when(isAzureLinux,
        cat("mcr.microsoft.com/"
            when(find(OS_VERSION_NUMBER, "3.0") >= 0, "azurelinux", "cbl-mariner"),
            "/base/core:",
            OS_VERSION_NUMBER),
        cat(ARCH_VERSIONED, "/buildpack-deps:", osVersionBase, "-curl")) ^
    set monitorBaseTemplate to when(monitorMajor != "8" && monitorMajor != "9", "Dockerfile.linux.install-monitor-base.10", "Dockerfile.linux.install-monitor-base")
}}ARG REPO=mcr.microsoft.com/dotnet/aspnet

# Installer image
FROM {{installerImageTag}} AS installer
{{if isInternal:
ARG ACCESSTOKEN
}}{{if isAzureLinux:
{{InsertTemplate("../Dockerfile.linux.distroless-azurelinux-installer-prereqs")}}
}}
# Retrieve .NET Monitor Base
{{InsertTemplate(monitorBaseTemplate, [
    "monitorVersion": monitorVersion,
    "monitorMajorMinor": monitorMajorMinor,
    "monitorBaseUrl": monitorBaseUrl,
    "monitorBaseChecksumUrl": monitorBaseChecksumUrl
])}}


# .NET Monitor Base image
FROM {{aspnetBaseTag}}

WORKDIR /app
COPY --from=installer /app .

{{InsertTemplate("Dockerfile.envs")}}

ENTRYPOINT [ "dotnet-monitor" ]
CMD [ "collect", "--urls", "https://+:52323", "--metricUrls", "http://+:52325" ]
