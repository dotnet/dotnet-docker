{{
    set aspireVersionParts to split(PRODUCT_VERSION, ".") ^
    set aspireMajorMinor to cat(aspireVersionParts[0], ".", aspireVersionParts[1]) ^

    set isAzureLinux to find(OS_VERSION, "mariner") >= 0 || find(OS_VERSION, "azurelinux") >= 0 ^
    set aspnetBaseTag to
        cat("$REPO:", VARIABLES[cat("dotnet|8.0|product-version")], "-", OS_VERSION, "-extra", ARCH_TAG_SUFFIX) ^
    set osVersionBase to match(OS_VERSION, ".+(?=.*-)")[0] ^
    set installerImageTag to when(isAzureLinux,
        cat("mcr.microsoft.com/",
            when(find(OS_VERSION, "3.0") >= 0, "azurelinux", "cbl-mariner"),
            "/base/core:",
            OS_VERSION_NUMBER),
        cat(ARCH_VERSIONED, "/buildpack-deps:", osVersionBase, "-curl")) ^

    set baseUrl to VARIABLES[cat("aspire-dashboard|", aspireMajorMinor, "|base-url|", VARIABLES["branch"])] ^
    set isInternal to find(baseUrl, "artifacts.visualstudio.com") >= 0 ^

    set buildVersion to VARIABLES[cat("aspire-dashboard|", aspireMajorMinor, "|build-version")] ^
    set aspireVersionVariable to when(find(buildVersion, '-rtm') >= 0 || find(buildVersion, '-servicing') >= 0, "product-version", "build-version") ^
    set aspireVersion to VARIABLES[cat("aspire-dashboard|", aspireMajorMinor, "|", aspireVersionVariable)] ^
    set versionFolder to when(buildVersion != aspireVersion, buildVersion, '$dotnet_aspire_version') ^
    set aspireBaseUrl to cat(VARIABLES[cat("aspire-dashboard|", aspireMajorMinor, "|base-url|", VARIABLES["branch"])], "/aspire/", versionFolder, "/") ^

    set downloadUrl to cat(aspireBaseUrl, "aspire-dashboard-linux-", ARCH_SHORT, ".zip") ^
    set sha to VARIABLES[join(["aspire-dashboard", aspireMajorMinor, "linux", ARCH_SHORT, "sha"], "|")]

}}ARG REPO=mcr.microsoft.com/dotnet/aspnet

# Installer image
FROM {{installerImageTag}} AS installer{{if isInternal:
ARG ACCESSTOKEN}}
{{if isAzureLinux:
{{InsertTemplate("../Dockerfile.linux.distroless-azurelinux-installer-prereqs", [ "is-zip": "true" ])}}
}}
# Retrieve Aspire Dashboard
RUN dotnet_aspire_version={{aspireVersion}} \
    && {{InsertTemplate("../Dockerfile.linux.download-dotnet", [
        "download-url": downloadUrl,
        "out-file": "aspire_dashboard.zip",
        "extract-to": "/app",
        "sha-var-name": "aspire_dashboard_sha512",
        "sha": sha
    ], "    ")}}


# Aspire Dashboard image
FROM {{aspnetBaseTag}}

WORKDIR /app
COPY --from=installer /app .

{{InsertTemplate("Dockerfile.envs")}}

ENTRYPOINT [ "dotnet", "/app/Aspire.Dashboard.dll" ]
