{{
    _ Configures a non-root user
    _ ARGS:
        name: Name of the user/group to create
        gid (optional): ID of the group to be created
        uid (optional): ID of the user to be created
        no-create-home (optional): Indicates whether a home directory should be created for the user
        no-shell (optional): Indicates whether the shell should be set to /bin/false ^

    set isAlpine to find(OS_VERSION, "alpine") >= 0 ^
    set isDebian to find(OS_ARCH_HYPHENATED, "Debian") >= 0 ^
    set isUbuntu to find(OS_ARCH_HYPHENATED, "Ubuntu") >= 0 ^
    set isAzureLinux to find(OS_VERSION, "cbl-mariner") >= 0 || find(OS_VERSION, "azurelinux") >= 0 ^
    set isAzureLinux3 to isAzureLinux && find(OS_VERSION_NUMBER, "3.0") >= 0 ^
    set isDistrolessAzureLinux to defined(match(OS_VERSION, "^cbl-mariner\d+\.\d+-distroless$")) || defined(match(OS_VERSION, "^azurelinux\d+\.\d+-distroless$")) ^
    set isChiseledUbuntu to find(OS_VERSION, "chiseled") >= 0 ^

    set name to ARGS["name"] ^
    set uid to when(len(ARGS["uid"]) > 0, ARGS["uid"], "$APP_UID") ^
    set gid to when(len(ARGS["gid"]) > 0, ARGS["gid"], "$APP_UID") ^

    set addGroupCommand to when(isAlpine,
        "addgroup",
        "groupadd") ^

    set addUserCommand to when(isAlpine,
        "adduser",
        "useradd -l") ^
    set addUserGroupArg to when(isAlpine,
        cat("--ingroup=", name),
        cat("--gid=", gid)) ^

    set explicitlyCreateHome to !isAlpine && !isChiseledUbuntu ^
    set createHomeArg to
        when(ARGS["no-create-home"],
            "--no-create-home",
        when(explicitlyCreateHome,
            "--create-home",
            "")) ^

    set utilPkgs to when(isAzureLinux3 && !isDistrolessAzureLinux, ["shadow-utils"], [])

}}{{if len(utilPkgs) > 0:{{InsertTemplate("../Dockerfile.linux.install-pkgs", [
        "pkgs": utilPkgs,
        "no-clean": "true"
    ])}}
    && }}{{addGroupCommand}} \
        --gid={{gid}} \
        {{name}} \
    && {{addUserCommand}} \
        --uid={{uid}} \
        {{addUserGroupArg}} \{{if ARGS["no-shell"]:
        --shell /bin/false \}}{{if createHomeArg != "":
        {{createHomeArg}} \}}{{if isAlpine:
        --disabled-password \}}
        {{name}}{{if len(utilPkgs) > 0: \
    && {{InsertTemplate("../Dockerfile.linux.remove-pkgs", [
        "pkgs": utilPkgs
        ], "    ")}}}}
