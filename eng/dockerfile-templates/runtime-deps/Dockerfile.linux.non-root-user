{{
    _ Configures a non-root user
    _ ARGS:
        name: Name of the user/group to create
        gid (optional): ID of the group to be created
        uid (optional): ID of the user to be created
        no-create-home (optional): Indicates whether a home directory should be created for the user
        no-shell (optional): Indicates whether the shell should be set to /bin/false ^
    set dotnetVersion to join(slice(split(PRODUCT_VERSION, "."), 0, 2), ".") ^
    set isAlpine to find(OS_VERSION, "alpine") >= 0 ^
    set isDebian to find(OS_ARCH_HYPHENATED, "Debian") >= 0 ^
    set isUbuntu to find(OS_ARCH_HYPHENATED, "Ubuntu") >= 0 ^
    set isMariner to find(OS_VERSION, "cbl-mariner") >= 0 ^
    set isDistrolessMariner to defined(match(OS_VERSION, "^cbl-mariner\d+\.\d+-distroless$")) ^
    set isChiseledUbuntu to find(OS_VERSION, "chiseled") >= 0 ^
    set addUserCommand to when(isDebian || isUbuntu || isMariner, "useradd -l", "adduser") ^
    set uid to when(len(ARGS["uid"]) > 0, ARGS["uid"], "$APP_UID") ^
    set gid to when(len(ARGS["gid"]) > 0, ARGS["gid"], "$APP_UID") ^
    set utilPkgs to when(isMariner && !isDistrolessMariner && dotnetVersion != "6.0" && dotnetVersion != "7.0", ["shadow-utils"], [])
}}{{if len(utilPkgs) > 0:{{InsertTemplate("../Dockerfile.linux.install-pkgs", [
        "pkgs": utilPkgs,
        "no-clean": "true"
    ])}}
    && }}{{if isAlpine:addgroup^else:groupadd}} \
        --system \
        --gid={{gid}} \
        {{ARGS["name"]}} \
    && {{addUserCommand}} \
        --uid={{uid}} \
        {{if isAlpine:--ingroup={{ARGS["name"]}}^else:--gid={{gid}}}} \{{if ARGS["no-shell"]:
        --shell /bin/false \}}{{if ARGS["no-create-home"]:
        --no-create-home \^elif dotnetVersion != "6.0" && dotnetVersion != "7.0" && (find(addUserCommand, "useradd") >= 0) && !isChiseledUbuntu:
        --create-home \}}
        --system \
        {{ARGS["name"]}}{{if len(utilPkgs) > 0: \
    && {{InsertTemplate("../Dockerfile.linux.remove-pkgs", [
        "pkgs": utilPkgs
        ], "    ")}}}}
