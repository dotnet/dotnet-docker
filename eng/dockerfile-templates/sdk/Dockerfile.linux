{{
    set dotnetVersion to join(slice(split(PRODUCT_VERSION, "."), 0, 2), ".") ^
    set isAlpine to find(OS_VERSION, "alpine") >= 0 ^
    set isMariner to find(OS_VERSION, "cbl-mariner") >= 0 ^
    set isFullMariner to defined(match(OS_VERSION, "^cbl-mariner\d+\.\d+$")) ^
    set baseUrl to VARIABLES[cat("base-url|", dotnetVersion, "|", VARIABLES["branch"])] ^
    set isInternal to find(baseUrl, "msrc") >= 0 || find(baseUrl, "internal") >= 0 ^
    set isRpmInstall to isFullMariner && dotnetVersion = "6.0" ^
    set baseImageTag to cat("$REPO:", VARIABLES[cat("dotnet|", dotnetVersion, "|product-version")], "-", OS_VERSION, ARCH_TAG_SUFFIX) ^
    set internalInstallerBase to when(isAlpine || isMariner,
        baseImageTag,
        cat(ARCH_VERSIONED, "/buildpack-deps:", OS_VERSION_BASE, "-curl")) ^
    set pkgs to filter(when(isAlpine,
        [
            "curl",
            "icu-data-full",
            "icu-libs",
            "git"
        ],
        when(isMariner,
            [
                "git",
                when(find(OS_VERSION, "1.0") < 0, "tar", "")
            ],
            [
                "curl",
                "git",
                "wget"
            ])), len)
}}ARG REPO=mcr.microsoft.com/dotnet/aspnet
{{if isInternal:# Installer image
FROM {{internalInstallerBase}} AS installer

ARG SAS_QUERY_STRING
{{if isFullMariner && !isRpmInstall:
RUN {{InsertTemplate("../Dockerfile.linux.install-pkgs",
    [
        "pkgs": ["tar"]
    ])}}
}}
{{InsertTemplate("Dockerfile.linux.install-sdk",
    [
        "install-method": when(isRpmInstall, "download", "download-and-install"),
        "is-internal": isInternal,
        "url-suffix": "$SAS_QUERY_STRING",
        "is-rpm-install": isRpmInstall
    ])}}


# .NET SDK image
}}FROM {{baseImageTag}}

{{InsertTemplate("Dockerfile.envs")}}

RUN {{InsertTemplate("../Dockerfile.linux.install-pkgs",
[
    "pkgs": pkgs
])}}

{{if isInternal:{{
if isRpmInstall:{{InsertTemplate("Dockerfile.linux.install-sdk",
    [
        "install-method": "copy-and-install",
        "is-internal": isInternal,
        "url-suffix": "$SAS_QUERY_STRING",
        "installer-stage": "installer",
        "is-rpm-install": isRpmInstall
    ])}}^
else:COPY --from=installer ["/usr/share/dotnet", "/usr/share/dotnet"]

{{InsertTemplate("Dockerfile.linux.first-run")}}}}^
else:{{InsertTemplate("Dockerfile.linux.install-sdk",
    [
        "install-method": "download-and-install",
        "is-rpm-install": isRpmInstall
    ])}}}}{{if !isAlpine || ARCH_SHORT = "x64":

{{InsertTemplate("Dockerfile.linux.install-powershell")}}}}
