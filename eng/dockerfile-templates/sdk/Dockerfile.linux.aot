{{
    set dotnetVersion to join(slice(split(PRODUCT_VERSION, "."), 0, 2), ".") ^
    set baseImageTag to cat("$REPO:", VARIABLES[cat("sdk|", dotnetVersion, "|fixed-tag")], "-", OS_VERSION, ARCH_TAG_SUFFIX) ^

    set isAlpine to find(OS_VERSION, "alpine") >= 0 ^
    set isAzureLinux to find(OS_VERSION, "cbl-mariner") >= 0 || find(OS_VERSION, "azurelinux") >= 0 ^
    set isUbuntu to find(OS_ARCH_HYPHENATED, "Ubuntu") >= 0 ^
    set ubuntuVersion to when(find(OS_VERSION, "jammy") >= 0, "jammy", "noble") ^

    set pkgs to cat(sort(
        when(isAlpine,
        [
            "build-base",
            "clang",
            "zlib-dev"
        ],
        when(isAzureLinux,
        [
            "build-essential",
            "clang",
            "zlib-devel"
        ],
        [
            "clang",
            "zlib1g-dev",
            "llvm"
        ]))))

}}# syntax=docker/dockerfile:1
ARG REPO=mcr.microsoft.com/dotnet/sdk
FROM {{baseImageTag}}

RUN {{InsertTemplate("../Dockerfile.linux.install-pkgs", [ "pkgs": pkgs ])}}
