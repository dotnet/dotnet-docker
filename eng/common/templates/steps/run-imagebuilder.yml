parameters:
- name: name
  type: string
  default: ""
- name: displayName
  type: string
  default: "Run ImageBuilder"
- name: serviceConnections
  type: object
  default:
  # name: the name of the service connection argument that will be passed to the ImageBuilder command.
  #   For example, if the argument is --acr-service-connection, the name would be "acr".
  - name: ""
    # The service connection's ID (GUID).
    id: ""
    # The client ID of the Managed Idendity backing the service connection (GUID).
    clientId: ""
    # The ID of the tenant that the Managed Identity is in (GUID).
    tenantId: ""
- name: internalProjectName
  type: string
  default: null
- name: args
  type: string
  default: null
- name: condition
  type: string
  default: succeeded()
- name: continueOnError
  type: boolean
  default: false
- name: dockerClientOS
  type: string
  default: "linux"

steps:
- ${{ if and(eq(variables['System.TeamProject'], parameters.internalProjectName), ne(variables['Build.Reason'], 'PullRequest')) }}:

  - task: PowerShell@2
    ${{ if ne(parameters.name, '') }}:
      name: ${{ parameters.name }}
    displayName: ${{ parameters.displayName }}
    continueOnError: ${{ parameters.continueOnError }}
    condition: ${{ parameters.condition }}
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
      SYSTEM_OIDCREQUESTURI: $(System.OidcRequestUri)
    inputs:
      targetType: 'inline'
      script: |
        $serviceConnections = '${{ convertToJson(parameters.serviceConnections) }}'

        Write-Host "Service connections:"
        Write-Host "${serviceConnections}"

        $serviceConnectionsJson = $serviceConnections | ConvertFrom-Json
        $serviceConnectionsArgs = @()
        foreach ($connection in $serviceConnectionsJson) {
            $serviceConnectionsArgs += "--$($connection.name)-service-connection"
            $serviceConnectionsArgs += "$($connection.tenantId):$($connection.clientId):$($connection.id)"
        }

        $(runAuthedImageBuilderCmd) ${{ parameters.args }} @serviceConnectionsArgs

- ${{ else }}:

  - task: PowerShell@2
    ${{ if ne(parameters.name, '') }}:
      name: ${{ parameters.name }}
    displayName: ${{ parameters.displayName }}
    continueOnError: ${{ parameters.continueOnError }}
    condition: ${{ parameters.condition }}
    inputs:
      targetType: 'inline'
      script: >-
        $(runImageBuilderCmd) ${{ parameters.args }}
