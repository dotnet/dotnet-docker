# This template wraps the common publish stage template with settings specific
# to the .NET team's infrastructure.

parameters:
  internalProjectName: null
  publicProjectName: null
  pool: ""
  isInternalServicingValidation: false
  isStandalonePublish: false
  customPublishInitSteps: []
  sourceBuildPipelineDefinitionId: ''
  sourceBuildPipelineRunId: ''

stages:
- template: /eng/common/templates/stages/publish.yml@self
  parameters:
    internalProjectName: ${{ parameters.internalProjectName }}
    publicProjectName: ${{ parameters.publicProjectName }}
    isInternalServicingValidation: ${{ parameters.isInternalServicingValidation }}
    isStandalonePublish: ${{ parameters.isStandalonePublish }}
    sourceBuildPipelineDefinitionId: ${{ parameters.sourceBuildPipelineDefinitionId }}
    sourceBuildPipelineRunId: ${{ parameters.sourceBuildPipelineRunId }}

    customPublishInitSteps:
    - pwsh: |
        # When reporting the repo name in the publish notification, we don't want to include
        # the org part of the repo name (e.g. we want "dotnet-docker", not "dotnet-dotnet-docker").
        # This also accounts for the different separators between AzDO and GitHub repo names.

        $repoName = "$(Build.Repository.Name)"

        $orgSeparatorIndex = $repoName.IndexOf("/")
        if ($orgSeparatorIndex -eq -1) {
          $orgSeparatorIndex = $repoName.IndexOf("-")
        }

        if ($orgSeparatorIndex -ge 0) {
          $repoName = $repoName.Substring($orgSeparatorIndex + 1)
        }
        echo "##vso[task.setvariable variable=publishNotificationRepoName]$repoName"
      displayName: "Set Custom Repo Name Var"
    - ${{ parameters.customPublishInitSteps }}

    ${{ if eq(variables['System.TeamProject'], parameters.internalProjectName) }}:
      customPublishVariables:
      - group: DotNet-AllOrgs-Darc-Pats

    pool:
      ${{ if ne(parameters.pool, '') }}:
        ${{ parameters.pool }}
      ${{ elseif eq(variables['System.TeamProject'], parameters.publicProjectName) }}:
        vmImage: $(defaultLinuxAmd64PoolImage)
      ${{ elseif eq(variables['System.TeamProject'], parameters.internalProjectName) }}:
        name: $(linuxAmd64InternalPoolName)
        image: $(linuxAmd64InternalPoolImage)
        os: linux
