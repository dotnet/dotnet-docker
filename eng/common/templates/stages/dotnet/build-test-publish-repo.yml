# A wrapper template around the common build-test-publish-repo template with settings
# specific to the .NET team's infrastructure.

parameters:
  noCache: false
  internalProjectName: null
  publicProjectName: null
  buildMatrixCustomBuildLegGroupArgs: ""
  testMatrixCustomBuildLegGroupArgs: ""
  customCopyBaseImagesInitSteps: []
  customBuildInitSteps: []
  customTestInitSteps: []
  customPublishInitSteps: []
  windowsAmdBuildJobTimeout: 60
  windowsAmdTestJobTimeout: 60
  linuxAmdBuildJobTimeout: 60
  linuxAmd64Pool: ""
  buildMatrixType: platformDependencyGraph
  testMatrixType: platformVersionedOs

stages:
- template: /eng/common/templates/stages/build-test-publish-repo.yml@self
  parameters:
    noCache: ${{ parameters.noCache }}
    internalProjectName: ${{ parameters.internalProjectName }}
    publicProjectName: ${{ parameters.publicProjectName }}
    buildMatrixCustomBuildLegGroupArgs: ${{ parameters.buildMatrixCustomBuildLegGroupArgs }}
    testMatrixCustomBuildLegGroupArgs: ${{ parameters.testMatrixCustomBuildLegGroupArgs }}
    customCopyBaseImagesInitSteps: ${{ parameters.customCopyBaseImagesInitSteps}}
    customBuildInitSteps: ${{ parameters.customBuildInitSteps }}
    customTestInitSteps: ${{ parameters.customTestInitSteps }}
    customPublishInitSteps:
    - pwsh: |
        # When reporting the repo name in the publish notification, we don't want to include
        # the org part of the repo name (e.g. we want "dotnet-docker", not "dotnet-dotnet-docker").
        # This also accounts for the different separators between AzDO and GitHub repo names.

        $repoName = "$(Build.Repository.Name)"

        $orgSeparatorIndex = $repoName.IndexOf("/")
        if ($orgSeparatorIndex -eq -1) {
          $orgSeparatorIndex = $repoName.IndexOf("-")
        }

        if ($orgSeparatorIndex -ge 0) {
          $repoName = $repoName.Substring($orgSeparatorIndex + 1)
        }
        echo "##vso[task.setvariable variable=publishNotificationRepoName]$repoName"
      displayName: "Set Custom Repo Name Var"
    - ${{ parameters.customPublishInitSteps }}
    windowsAmdBuildJobTimeout: ${{ parameters.windowsAmdBuildJobTimeout }}
    windowsAmdTestJobTimeout: ${{ parameters.windowsAmdTestJobTimeout }}
    linuxAmdBuildJobTimeout: ${{ parameters.linuxAmdBuildJobTimeout }}
    buildMatrixType: ${{ parameters.buildMatrixType }}
    testMatrixType: ${{ parameters.testMatrixType }}

    internalVersionsRepoRef: InternalVersionsRepo
    publicVersionsRepoRef: PublicVersionsRepo
    
    ${{ if eq(variables['System.TeamProject'], parameters.internalProjectName) }}:
      customPublishVariables:
      - group: DotNet-AllOrgs-Darc-Pats

    # Linux AMD64
    linuxAmd64Pool:
      ${{ if ne(parameters.linuxAmd64Pool, '') }}:
        ${{ parameters.linuxAmd64Pool }}
      ${{ elseif eq(variables['System.TeamProject'], parameters.publicProjectName) }}:
        vmImage: $(defaultLinuxAmd64PoolImage)
      ${{ elseif eq(variables['System.TeamProject'], parameters.internalProjectName) }}:
        name: NetCore1ESPool-Internal
        image: 1es-ubuntu-2204
        os: linux
    
    # Linux Arm64
    linuxArm64Pool:
      image: Mariner-2-Docker-ARM64
      os: linux
      hostArchitecture: Arm64
      ${{ if eq(variables['System.TeamProject'], parameters.publicProjectName) }}:
        name: Docker-Linux-Arm-Public
      ${{ if eq(variables['System.TeamProject'], parameters.internalProjectName) }}:
        name: Docker-Linux-Arm-Internal

    # Linux Arm32
    linuxArm32Pool:
      image: Mariner-2-Docker-ARM64
      os: linux
      hostArchitecture: Arm64
      ${{ if eq(variables['System.TeamProject'], parameters.publicProjectName) }}:
        name: Docker-Linux-Arm-Public
      ${{ if eq(variables['System.TeamProject'], parameters.internalProjectName) }}:
        name: Docker-Linux-Arm-Internal

    # Windows Server 2016
    # TODO: Update this to 1ES-compatible pool
    windows2016Pool: Docker-2016-${{ variables['System.TeamProject'] }}

    # Windows Server 2019 (1809)
    ${{ if eq(variables['System.TeamProject'], parameters.publicProjectName) }}:
      windows1809Pool: Docker-1809-${{ variables['System.TeamProject'] }}
    ${{ if eq(variables['System.TeamProject'], parameters.internalProjectName) }}:
      windows1809Pool:
        name: NetCore1ESPool-Internal
        image: 1es-windows-2019
        os: windows

    # Windows Server 2022
    ${{ if eq(variables['System.TeamProject'], parameters.publicProjectName) }}:
      windows2022Pool: Docker-2022-${{ variables['System.TeamProject'] }}
    ${{ if eq(variables['System.TeamProject'], parameters.internalProjectName) }}:
      windows2022Pool:
        name: NetCore1ESPool-Internal
        image: 1es-windows-2022
        os: windows
