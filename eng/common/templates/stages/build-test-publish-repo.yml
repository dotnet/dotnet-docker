parameters:
  buildMatrixType: platformDependencyGraph
  testMatrixType: platformVersionedOs
  buildMatrixCustomBuildLegGroupArgs: ""
  testMatrixCustomBuildLegGroupArgs: ""
  customBuildInitSteps: []
  
  linuxAmdBuildJobTimeout: 60
  linuxArmBuildJobTimeout: 60
  windowsAmdBuildJobTimeout: 60

  linuxAmdTestJobTimeout: 60
  linuxArmTestJobTimeout: 60
  windowsAmdTestJobTimeout: 60

  linuxAmd64BuildPool:
    vmImage: $(defaultLinuxAmd64PoolImage)

  noCache: false
stages:

################################################################################
# Build Images
################################################################################
- stage: Build
  condition: and(succeeded(), contains(variables['stages'], 'build'))
  jobs:
  - template: ../jobs/test-images-linux-client.yml
    parameters:
      name: PreBuildValidation
      pool:
        vmImage: $(defaultLinuxAmd64PoolImage)
      testJobTimeout: ${{ parameters.linuxAmdTestJobTimeout }}
      preBuildValidation: true
  - template: ../jobs/copy-base-images.yml
    parameters:
      name: CopyBaseImages
      pool:
        vmImage: $(defaultLinuxAmd64PoolImage)
      additionalOptions: "--manifest '$(manifest)' $(manifestVariables)"
  - template: ../jobs/generate-matrix.yml
    parameters:
      matrixType: ${{ parameters.buildMatrixType }}
      name: GenerateBuildMatrix
      customBuildLegGroupArgs: ${{ parameters.buildMatrixCustomBuildLegGroupArgs }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Linux_amd64
      pool: ${{ parameters.linuxAmd64BuildPool }}
      matrix: dependencies.GenerateBuildMatrix.outputs['matrix.LinuxAmd64']
      dockerClientOS: linux
      buildJobTimeout: ${{ parameters.linuxAmdBuildJobTimeout }}
      customInitSteps: ${{ parameters.customBuildInitSteps }}
      noCache: ${{ parameters.noCache }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Linux_arm64v8
      pool:
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: DotNetCore-Docker-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
        demands:
        - Agent.OS -equals linux
        - Agent.OSArchitecture -equals ARM64
      matrix: dependencies.GenerateBuildMatrix.outputs['matrix.LinuxArm64v8']
      dockerClientOS: linux
      buildJobTimeout: ${{ parameters.linuxArmBuildJobTimeout }}
      customInitSteps: ${{ parameters.customBuildInitSteps }}
      noCache: ${{ parameters.noCache }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Linux_arm32v7
      pool:
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: DotNetCore-Docker-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
        demands:
        - Agent.OS -equals linux
        - Agent.OSArchitecture -equals ARM64
      matrix: dependencies.GenerateBuildMatrix.outputs['matrix.LinuxArm32v7']
      dockerClientOS: linux
      buildJobTimeout: ${{ parameters.linuxArmBuildJobTimeout }}
      customInitSteps: ${{ parameters.customBuildInitSteps }}
      noCache: ${{ parameters.noCache }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Windows1809_amd64
      pool:
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: Docker-1809-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
          demands: VSTS_OS -equals Windows_Server_2019_Data_Center_RS5
      matrix: dependencies.GenerateBuildMatrix.outputs['matrix.Windows1809Amd64']
      dockerClientOS: windows
      buildJobTimeout: ${{ parameters.windowsAmdBuildJobTimeout }}
      customInitSteps: ${{ parameters.customBuildInitSteps }}
      noCache: ${{ parameters.noCache }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Windows1909_amd64
      pool:
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: Docker-1909-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
          demands: VSTS_OS -equals Windows-ServerDatacenter-1909
      matrix: dependencies.GenerateBuildMatrix.outputs['matrix.Windows1909Amd64']
      dockerClientOS: windows
      buildJobTimeout: ${{ parameters.windowsAmdBuildJobTimeout }}
      customInitSteps: ${{ parameters.customBuildInitSteps }}
      noCache: ${{ parameters.noCache }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Windows2004_amd64
      pool:
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: Docker-2004-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
          demands: VSTS_OS -equals Windows-ServerDatacenter-2004
      matrix: dependencies.GenerateBuildMatrix.outputs['matrix.Windows2004Amd64']
      dockerClientOS: windows
      buildJobTimeout: ${{ parameters.windowsAmdBuildJobTimeout }}
      customInitSteps: ${{ parameters.customBuildInitSteps }}
      noCache: ${{ parameters.noCache }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Windows20H2_amd64
      pool:
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: Docker-20H2-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
          demands: VSTS_OS -equals Windows-ServerDatacenter-2009
      matrix: dependencies.GenerateBuildMatrix.outputs['matrix.Windows20H2Amd64']
      dockerClientOS: windows
      buildJobTimeout: ${{ parameters.windowsAmdBuildJobTimeout }}
      customInitSteps: ${{ parameters.customBuildInitSteps }}
      noCache: ${{ parameters.noCache }}
  - template: ../jobs/build-images.yml
    parameters:
      name: WindowsLtsc2016_amd64
      pool:
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: Docker-2016-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
          demands: VSTS_OS -equals Windows_Server_2016_Data_Center_with_Containers
      matrix: dependencies.GenerateBuildMatrix.outputs['matrix.WindowsLtsc2016Amd64']
      dockerClientOS: windows
      buildJobTimeout: ${{ parameters.windowsAmdBuildJobTimeout }}
      customInitSteps: ${{ parameters.customBuildInitSteps }}
      noCache: ${{ parameters.noCache }}

################################################################################
# Post-Build
################################################################################
- stage: Post_Build
  dependsOn: Build
  condition: and(succeeded(), contains(variables['stages'], 'build'))
  jobs:
  - template: ../jobs/post-build.yml

################################################################################
# Test Images
################################################################################
- ${{ if eq(variables['System.TeamProject'], 'internal') }}:
  - stage: Test
    dependsOn: Post_Build
    condition: "
      and(
        contains(variables['stages'], 'test'),
        or(
          and(
            succeeded(),
            contains(variables['stages'], 'build')),
          not(contains(variables['stages'], 'build'))))"
    jobs:
    - template: ../jobs/generate-matrix.yml
      parameters:
        matrixType: ${{ parameters.testMatrixType }}
        name: GenerateTestMatrix
        customBuildLegGroupArgs: ${{ parameters.testMatrixCustomBuildLegGroupArgs }}
        isTestStage: true

    - template: ../jobs/test-images-linux-client.yml
      parameters:
        name: Linux_amd64
        pool:
          vmImage: $(defaultLinuxAmd64PoolImage)
        matrix: dependencies.GenerateTestMatrix.outputs['matrix.LinuxAmd64']
        testJobTimeout: ${{ parameters.linuxAmdTestJobTimeout }}
    - template: ../jobs/test-images-linux-client.yml
      parameters:
        name: Linux_arm64v8
        pool:
          name: DotNetCore-Docker
          demands:
          - Agent.OS -equals linux
          - Agent.OSArchitecture -equals ARM64
        matrix: dependencies.GenerateTestMatrix.outputs['matrix.LinuxArm64v8']
        testJobTimeout: ${{ parameters.linuxArmTestJobTimeout }}
    - template: ../jobs/test-images-linux-client.yml
      parameters:
        name: Linux_arm32v7
        pool:
          name: DotNetCore-Docker
          demands:
          - Agent.OS -equals linux
          - Agent.OSArchitecture -equals ARM64
        matrix: dependencies.GenerateTestMatrix.outputs['matrix.LinuxArm32v7']
        testJobTimeout: ${{ parameters.linuxArmTestJobTimeout }}
    - template: ../jobs/test-images-windows-client.yml
      parameters:
        name: Windows1809_amd64
        pool:
          name: DotNetCore-Docker
          demands: VSTS_OS -equals Windows_Server_2019_Data_Center_RS5
        matrix: dependencies.GenerateTestMatrix.outputs['matrix.Windows1809Amd64']
        testJobTimeout: ${{ parameters.windowsAmdTestJobTimeout }}
    - template: ../jobs/test-images-windows-client.yml
      parameters:
        name: Windows1909_amd64
        pool:
          name: DotNetCore-Docker
          demands: VSTS_OS -equals Windows-ServerDatacenter-1909
        matrix: dependencies.GenerateTestMatrix.outputs['matrix.Windows1909Amd64']
        testJobTimeout: ${{ parameters.windowsAmdTestJobTimeout }}
    - template: ../jobs/test-images-windows-client.yml
      parameters:
        name: Windows2004_amd64
        pool:
          name: DotNetCore-Docker
          demands: VSTS_OS -equals Windows-ServerDatacenter-2004
        matrix: dependencies.GenerateTestMatrix.outputs['matrix.Windows2004Amd64']
        testJobTimeout: ${{ parameters.windowsAmdTestJobTimeout }}
    - template: ../jobs/test-images-windows-client.yml
      parameters:
        name: Windows20H2_amd64
        pool:
          name: DotNetCore-Docker
          demands: VSTS_OS -equals Windows-ServerDatacenter-2009
        matrix: dependencies.GenerateTestMatrix.outputs['matrix.Windows20H2Amd64']
        testJobTimeout: ${{ parameters.windowsAmdTestJobTimeout }}
    - template: ../jobs/test-images-windows-client.yml
      parameters:
        name: WindowsLtsc2016_amd64
        pool:
          name: DotNetCore-Docker
          demands: VSTS_OS -equals Windows_Server_2016_Data_Center_with_Containers
        matrix: dependencies.GenerateTestMatrix.outputs['matrix.WindowsLtsc2016Amd64']
        testJobTimeout: ${{ parameters.windowsAmdTestJobTimeout }}

################################################################################
# Publish Images
################################################################################
- stage: Publish
  ${{ if eq(variables['System.TeamProject'], 'internal') }}:
    dependsOn: Test
  ${{ if eq(variables['System.TeamProject'], 'public') }}:
    dependsOn: Post_Build
  condition: "
    and(
      contains(variables['stages'], 'publish'),
      or(
        or(
          and(
            and(
              contains(variables['stages'], 'build'),
              succeeded('Post_Build')),
            and(
              contains(variables['stages'], 'test'),
              succeeded('Test'))),
          or(
            and(
              not(contains(variables['stages'], 'build')),
              and(
                contains(variables['stages'], 'test'),
                succeeded('Test'))),
            and(
              not(contains(variables['stages'], 'test')),
              and(
                contains(variables['stages'], 'build'),
                succeeded('Post_Build'))))),
        not(
          or(
            contains(variables['stages'], 'build'),
            contains(variables['stages'], 'test')))))"
  jobs:
  - template: ../jobs/publish.yml
    parameters:
      pool:
        vmImage: $(defaultLinuxAmd64PoolImage)
