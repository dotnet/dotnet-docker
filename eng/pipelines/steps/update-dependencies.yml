parameters:
  serviceConnection: ""
  args: ""

steps:
- script: docker build -t update-dependencies -f $(engPath)/update-dependencies/Dockerfile --pull .
  displayName: Build Update Dependencies image
- script: docker run --name update-dependencies -d -t --entrypoint /bin/sh -v /var/run/docker.sock:/var/run/docker.sock update-dependencies
  displayName: Start Update Dependencies container

- ${{ if ne(parameters.serviceConnection, '') }}:
  - template: /eng/common/templates/steps/run-pwsh-with-auth.yml@self
    parameters:
      displayName: Az login
      serviceConnection: ${{ parameters.serviceConnection }}
      command: |
        $azLogin = "az login --service-principal --tenant $env:tenantId --username $env:servicePrincipalId --federated-token $env:idToken";
        $loginCommand = "docker exec update-dependencies $azLogin";
        Write-Host "Executing $loginCommand";
        Invoke-Expression $loginCommand;

- powershell: |
    $args = "${{ parameters.args }}"
    $pat="$(BotAccount-dotnet-docker-bot-PAT)"
    $credArgs = "--user $(dotnetDockerBot.userName) --email $(dotnetDockerBot.email) --password $pat"
    $args += " $credArgs"

    $command = "docker exec update-dependencies update-dependencies $args"
    Invoke-Expression $command
  displayName: Run Update Dependencies

- script: docker rm -f update-dependencies
  displayName: Remove Update Dependencies container
  condition: always()
