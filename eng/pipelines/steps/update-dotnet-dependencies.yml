parameters:
  useInternalBuild: false

steps:
- pwsh: |
    $args = @{
      Channel = "$(channel)"
    }

    if ("${{ parameters.useInternalBuild }}" -eq "true") {
      $args["UseInternalBuild"] = $true
      $args["BlobStorageSasQueryString"] = "$(dotnetbuilds-internal-container-read-token)"
      $args["AzdoVersionsRepoInfoAccessToken"] = "$(dn-bot-devdiv-dnceng-rw-code-pat)"
    }

    $(engPath)/Get-DropVersions.ps1 @args
  displayName: Get Versions
- powershell: |
    $args = @{
      ProductVersion = "$(dockerfileVersion)"
      RuntimeVersion = "$(runtimeVer)"
      AspnetVersion = "$(aspnetVer)"
      SdkVersion = "$(sdkVer)"
      ComputeShas = $true
      PrintArgsVariableOnly = $true
    }

    if ("${{ parameters.useInternalBuild }}" -eq "true") {
      $args["BinarySasQueryString"] = '"$(dotnetbuilds-internal-container-read-token)"'
      $args["ChecksumSasQueryString"] = '"$(dotnetbuilds-internal-checksums-container-read-token)"'
    }

    $(engPath)/Set-DotnetVersions.ps1 @args
  displayName: Get update-dependencies args
- powershell: |
    $branchPrefix = ""
    if ("${{ parameters.useInternalBuild }}" -eq "true") {
      $branchPrefix = "internal/release/"
    }
    $targetBranch = $branchPrefix + $(& $(engPath)/Get-Branch.ps1)
    echo "##vso[task.setvariable variable=targetBranch]$targetBranch"
  displayName: Set Target Branch Var
- template: update-dependencies.yml
  parameters:
    # The updateDepsArgs variable gets set by the Set-DotnetVersions.ps1 script
    customArgs: "$(updateDepsArgs) --org dnceng --project $(System.TeamProject) --repo $(Build.Repository.Name) --target-branch $(targetBranch)"
    stableBranding: $(dotnetStableBranding)
    useInternalBuild: ${{ parameters.useInternalBuild }}
