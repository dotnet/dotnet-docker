# A wrapper template around the common .NET build/test template with settings
# specific to the Dockerfiles in this repo.

parameters:
- name: publishConfig
  type: object

- name: internalProjectName
  type: string

- name: publicProjectName
  type: string

- name: sourceBuildPipelineRunId
  type: string

- name: noCache
  type: boolean
  default: false

- name: versionsRepoRef
  type: string
  default: ""

# Whether this is a standalone build. This should be set to false if this stage
# will be followed by a publish in the same pipeline run.
- name: isStandaloneBuild
  type: boolean
  default: false

# Service connection for building unreleased .NET versions. This is not needed
# for every internal build, only for builds that need to access the staging or
# staging-test storage account.
- name: storageAccountServiceConnection
  type: object
  default: null
  # Same service connection object format as publishConfig:
  #   name: ""
  #   id: ""
  #   tenantId: ""
  #   clientId: ""

stages:
- ${{ if parameters.isStandaloneBuild }}:
  - template: /eng/common/templates/stages/setup-service-connections.yml@self
    parameters:
      serviceConnections:
      - name: ${{ parameters.publishConfig.internalMirrorAcr.serviceConnection.name }}
      - name: ${{ parameters.publishConfig.buildAcr.serviceConnection.name }}
      - ${{ if parameters.storageAccountServiceConnection }}:
        - name: ${{ parameters.storageAccountServiceConnection.name }}

- template: /eng/common/templates/stages/dotnet/build-and-test.yml@self
  parameters:
    publishConfig: ${{ parameters.publishConfig }}
    internalProjectName: ${{ parameters.internalProjectName }}
    publicProjectName: ${{ parameters.publicProjectName }}
    sourceBuildPipelineRunId: ${{ parameters.sourceBuildPipelineRunId }}
    noCache: ${{ parameters.noCache }}
    versionsRepoRef: ${{ parameters.versionsRepoRef }}
    storageAccountServiceConnection: ${{ parameters.storageAccountServiceConnection }}

    ${{ if or(eq(variables['System.TeamProject'], parameters.publicProjectName), and(eq(variables['System.TeamProject'], parameters.internalProjectName), eq(variables['Build.Reason'], 'PullRequest'))) }}:
      buildMatrixType: platformVersionedOs
      buildMatrixCustomBuildLegGroupArgs: --custom-build-leg-group pr-build --custom-build-leg-group test-dependencies
    ${{ elseif eq(variables['System.TeamProject'], parameters.internalProjectName) }}:
      buildMatrixCustomBuildLegGroupArgs: --custom-build-leg-group test-dependencies
    testMatrixCustomBuildLegGroupArgs: --custom-build-leg-group test-dependencies

    customGenerateMatrixInitSteps:
    - template: /eng/pipelines/steps/set-public-source-branch-var.yml@self
    customBuildInitSteps:
    - template: /eng/pipelines/steps/set-public-source-branch-var.yml@self
    - ${{ if parameters.storageAccountServiceConnection }}:
      - powershell: |
          $imageBuilderBuildArgs = "$IMAGEBUILDERBUILDARGS --internal"
          echo "##vso[task.setvariable variable=imageBuilderBuildArgs]$imageBuilderBuildArgs"
        displayName: Set Custom Build Variables
    - template: /eng/pipelines/steps/set-custom-test-variables.yml@self
      parameters:
        publishConfig: ${{ parameters.publishConfig }}
        ${{ if parameters.storageAccountServiceConnection }}:
          isInternalServicingValidation: true
    customTestInitSteps:
    - template: /eng/pipelines/steps/set-custom-test-variables.yml@self
      parameters:
        publishConfig: ${{ parameters.publishConfig }}
        ${{ if parameters.storageAccountServiceConnection }}:
          isInternalServicingValidation: true
