trigger: none
pr: none
schedules:
- cron: "0 13 * * Mon-Fri"
  displayName: M-F daily build
  branches:
    include:
    - nightly
  always: true
variables:
- template: variables/common.yml
jobs:
- job: UpdateDependenciesCoreSdk
  displayName: Update Dependencies (dotnet/core-sdk)
  pool: Hosted Ubuntu 1604
  steps:
  - script: $(engPath)/get-drop-versions.sh $(channel)
    displayName: Get Versions
  - script: docker build -t update-dependencies -f $(engPath)/update-dependencies/Dockerfile --pull .
    displayName: Build Update Dependencies Tool
  - script: >
      docker run --rm -v /var/run/docker.sock:/var/run/docker.sock update-dependencies
      $(dockerfileVersion)
      --user $(dotnetDockerBot.userName)
      --email $(dotnetDockerBot.email)
      --password $(BotAccount-dotnet-docker-bot-PAT)
      --product-version runtime=$(runtimeVer)
      --product-version sdk=$(sdkVer)
      --product-aspnet-version aspnet=$(aspnetVer)
      --version-source-name dotnet/core-sdk
      --compute-shas
    displayName: Run Update Dependencies
- job: UpdateDependenciesDiagnostics
  displayName: Update Dependencies (dotnet/diagnostics)
  pool: Hosted Ubuntu 1604
  steps:
  - script: $(engPath)/get-drop-versions-monitor.sh $(monitorChannel)
    displayName: Get Versions
  - script: docker build -t update-dependencies -f $(engPath)/update-dependencies/Dockerfile --pull .
    displayName: Build Update Dependencies Tool
  - script: >
      docker run --rm -v /var/run/docker.sock:/var/run/docker.sock update-dependencies
      $(dockerfileVersion)
      --user $(dotnetDockerBot.userName)
      --email $(dotnetDockerBot.email)
      --password $(BotAccount-dotnet-docker-bot-PAT)
      --product-version monitor=$(monitorVer)
      --version-source-name dotnet/diagnostics
    displayName: Run Update Dependencies
