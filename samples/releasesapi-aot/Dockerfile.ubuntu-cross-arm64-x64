# Learn about building .NET container images:
# https://github.com/dotnet/dotnet-docker/blob/main/samples/README.md
FROM mcr.microsoft.com/dotnet/sdk:8.0-preview-jammy-arm64v8 AS build
ARG TARGETARCH
COPY <<EOF /etc/apt/sources.list.d/amd64.list
deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ jammy main restricted
deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ jammy-updates main restricted
EOF
RUN <<EOF
sed -i -e 's/deb http/deb [arch=arm64] http/g' /etc/apt/sources.list
dpkg --add-architecture amd64
apt-get update
apt-get install -y clang llvm gcc-x86-64-linux-gnu zlib1g-dev zlib1g-dev:amd64
EOF
WORKDIR /source

# copy csproj and restore as distinct layers
COPY *.csproj .
RUN dotnet restore -r linux-$TARGETARCH

# copy and publish app and libraries
COPY . .
RUN dotnet publish -a $TARGETARCH --self-contained --no-restore -o /app releasesapi.csproj
RUN rm /app/*.dbg /app/*.Development.json


# final stage/image
FROM mcr.microsoft.com/dotnet/runtime-deps:8.0-preview-jammy-chiseled
WORKDIR /app
COPY --from=build /app .
USER $APP_UID
ENTRYPOINT ["./releasesapi"]
