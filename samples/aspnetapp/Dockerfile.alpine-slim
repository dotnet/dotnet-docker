# Learn about building .NET container images:
# https://github.com/dotnet/dotnet-docker/blob/main/samples/README.md
FROM --platform=$BUILDPLATFORM mcr.microsoft.com/dotnet/sdk:8.0-preview-alpine AS build
ARG TARGETARCH
WORKDIR /source

# copy csproj and restore as distinct layers
COPY aspnetapp/*.csproj .
RUN dotnet restore -a $TARGETARCH /p:PublishReadyToRun=true

# copy everything else and build app
COPY aspnetapp/. .
RUN dotnet publish -a $TARGETARCH --no-restore --self-contained -o /app /p:PublishTrimmed=true /p:PublishReadyToRun=true


# Enable globalization and time zones:
# https://github.com/dotnet/dotnet-docker/blob/main/samples/enable-globalization.md
# final stage/image
FROM mcr.microsoft.com/dotnet/runtime-deps:8.0-preview-alpine
WORKDIR /app
COPY --from=build /app .

# This port needs to match the port being used
HEALTHCHECK CMD wget -qO- -t1 http://localhost:8080/healthz || exit 1
USER $APP_UID
ENTRYPOINT ["./aspnetapp"]
