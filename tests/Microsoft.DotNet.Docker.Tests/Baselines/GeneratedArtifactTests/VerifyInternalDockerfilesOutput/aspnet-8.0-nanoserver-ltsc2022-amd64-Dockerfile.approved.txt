# escape=`

ARG REPO=mcr.microsoft.com/dotnet/runtime

# Installer image
FROM mcr.microsoft.com/windows/servercore:ltsc2022-amd64 AS installer

ARG ACCESSTOKEN

# Install ASP.NET Core Runtime
RUN powershell -Command " `
        $ErrorActionPreference = 'Stop'; `
        $ProgressPreference = 'SilentlyContinue'; `
        `
        $dotnetFile = \"aspnetcore-runtime-0.0.0-win-x64.zip\"; `
        `
        $Headers = @{ `
            Authorization = \"Bearer $env:ACCESSTOKEN\"; `
            'x-ms-version' = '2017-11-09'; `
        }; `
        Invoke-WebRequest -OutFile $dotnetFile \"https://dotnetstage.blob.core.windows.net/aspnetcore/Runtime/0.0.0/aspnetcore-runtime-0.0.0-win-x64.zip\" -Headers $Headers; `
        $Headers = @{ `
            Authorization = \"Bearer $env:ACCESSTOKEN\"; `
            'x-ms-version' = '2017-11-09'; `
        }; `
        Invoke-WebRequest -OutFile 0.0.0-sha.txt \"https://dotnetstage.blob.core.windows.net/checksums/0.0.0-sha.txt\" -Headers $Headers; `
        `
        $expectedHash = ( `
            (Get-Content 0.0.0-sha.txt | Where-Object { `
                    $_ -match \"$([regex]::Escape($dotnetFile))$\"; `
            }) -split '\s+' `
        )[0].ToUpper(); `
        $actualHash = (Get-FileHash $dotnetFile -Algorithm SHA512).Hash.ToUpper(); `
        `
        if ($expectedHash -ne $actualHash) { `
            Write-Host 'CHECKSUM VERIFICATION FAILED!'; `
            Write-Host \"Expected: $expectedHash\"; `
            Write-Host \"Actual:   $actualHash\"; `
            exit 1; `
        }; `
        `
        mkdir dotnet/shared/Microsoft.AspNetCore.App; `
        tar --gzip --extract --no-same-owner --file $dotnetFile --directory dotnet ./shared/Microsoft.AspNetCore.App; `
        Remove-Item -Force $dotnetFile, 0.0.0-sha.txt"


# ASP.NET Core image
FROM $REPO:0.0.0-nanoserver-ltsc2022

# ASP.NET Core version
ENV ASPNET_VERSION=0.0.0

COPY --from=installer ["/dotnet/shared/Microsoft.AspNetCore.App", "/Program Files/dotnet/shared/Microsoft.AspNetCore.App"]
