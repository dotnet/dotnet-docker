{
  "build": [
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Cleanup Docker",
      "timeoutInMinutes": 0,
      "condition": "succeeded()",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "system prune -a -f",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Pull image-builder",
      "timeoutInMinutes": 0,
      "condition": "succeeded()",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "pull $(imageBuilder.imageName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Create container",
      "timeoutInMinutes": 0,
      "condition": "succeeded()",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "create $(docker.certVolumeArg) --name $(docker.containerName) $(imageBuilder.imageName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Copy Docker Certs",
      "timeoutInMinutes": 0,
      "condition": "succeeded()",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker ",
        "arguments": "cp c:/docker-certs $(docker.containerName):/",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Cleanup container",
      "timeoutInMinutes": 0,
      "condition": "always()",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "rm -f $(docker.containerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Clone Repo",
      "timeoutInMinutes": 0,
      "condition": "succeeded()",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run $(docker.commonRunArgs) $(docker.gitEnabledImageName) git clone https://github.com/dotnet/dotnet-docker.git /repo",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Checkout Source",
      "timeoutInMinutes": 0,
      "condition": "succeeded()",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run $(docker.commonRunArgs) $(docker.gitEnabledImageName) git checkout $(Build.SourceVersion)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Build ARM images",
      "timeoutInMinutes": 0,
      "condition": "succeeded()",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "$(docker.runImageBuilder) $(imageBuilder.armBuildArgs)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": true,
      "displayName": "Cleanup ARM Docker",
      "timeoutInMinutes": 0,
      "condition": "always()",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run $(docker.commonRunArgs) --entrypoint docker $(imageBuilder.imageName) system prune -a -f",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": true,
      "displayName": "Cleanup Docker",
      "timeoutInMinutes": 0,
      "condition": "always()",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "system prune -a -f",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    }
  ],
  "options": [
    {
      "enabled": false,
      "definition": {
        "id": "5bc3cfb7-6b54-4a4b-b5d2-a3905949f8a6"
      },
      "inputs": {}
    },
    {
      "enabled": false,
      "definition": {
        "id": "7c555368-ca64-4199-add6-9ebaf0b0137d"
      },
      "inputs": {
        "multipliers": "[]",
        "parallel": "false",
        "continueOnError": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
      },
      "inputs": {
        "workItemType": "234347",
        "assignToRequestor": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "57578776-4c22-4526-aeb0-86b6da17ee9c"
      },
      "inputs": {}
    }
  ],
  "variables": {
    "system.debug": {
      "value": "false",
      "allowOverride": true
    },
    "docker.commonRunArgs": {
      "value": "--rm -v $(docker.repoVolumeName):/repo -w /repo $(docker.dockerConfigArgs) --name $(docker.containerName)"
    },
    "docker.runImageBuilder": {
      "value": "run $(docker.commonRunArgs) $(imageBuilder.imageName)"
    },
    "docker.containerName": {
      "value": "$(Build.DefinitionName)-$(Build.BuildId)"
    },
    "docker.gitEnabledImageName": {
      "value": "buildpack-deps:stretch-scm"
    },
    "docker.dockerConfigArgs": {
      "value": "$(docker.certVolumeArg) -e DOCKER_CERT_PATH=/docker-certs -e DOCKER_TLS_VERIFY=1 -e DOCKER_HOST=tcp://$(PiIp):2376",
      "allowOverride": true
    },
    "docker.certVolumeArg": {
      "value": "-v cert-$(Build.DefinitionName)-$(Build.BuildId):/docker-certs"
    },
    "docker.repoVolumeName": {
      "value": "repo-$(Build.DefinitionName)-$(Build.BuildId)"
    },
    "imageBuilder.imageName": {
      "value": "microsoft/dotnet-buildtools-prereqs:image-builder-debian-20180330181728"
    },
    "imageBuilder.manifest": {
      "value": "manifest.json"
    },
    "imageBuilder.commonArgs": {
      "value": "build --manifest $(imageBuilder.manifest) $(PB_imageBuilder_queueCustomArgs)",
      "allowOverride": true
    },
    "imageBuilder.armBuildArgs": {
      "value": "$(imageBuilder.commonArgs) --path $(PB_imageBuilder_path) --architecture arm --skip-test --var VersionFilter=$(PB_imageBuilder_path) --var ArchitectureFilter=arm $(PB_imageBuilder_customArgs) --push --username $(PB_docker_username) --password $(PB_docker_password)",
      "allowOverride": true
    },
    "PB_docker_password": {
      "value": null,
      "isSecret": true
    },
    "PB_imageBuilder_customArgs": {
      "value": ""
    },
    "PB_imageBuilder_path": {
      "value": "*"
    },
    "PB_imageBuilder_queueCustomArgs": {
      "value": "",
      "allowOverride": true
    }
  },
  "demands": [
    "VSTS_OS -equals Windows_10_Enterprise",
    "DockerVersion"
  ],
  "retentionRules": [
    {
      "branches": [
        "+refs/heads/*"
      ],
      "artifacts": [],
      "artifactTypesToDelete": [
        "FilePath",
        "SymbolStore"
      ],
      "daysToKeep": 10,
      "minimumToKeep": 1,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "jobAuthorizationScope": "projectCollection",
  "jobTimeoutInMinutes": 90,
  "jobCancelTimeoutInMinutes": 5,
  "repository": {
    "properties": {
      "cleanOptions": "3",
      "gitLfsSupport": "false",
      "skipSyncSource": "false",
      "reportBuildStatus": "true",
      "fetchDepth": "0",
      "connectedServiceId": "1e3b2b41-8d83-4240-a16f-6fc0b825d0d6",
      "apiUrl": "https://api.github.com/repos/dotnet/dotnet-docker",
      "branchesUrl": "https://api.github.com/repos/dotnet/dotnet-docker/branches",
      "cloneUrl": "https://github.com/dotnet/dotnet-docker.git",
      "refsUrl": "https://api.github.com/repos/dotnet/dotnet-docker/git/refs",
      "checkoutNestedSubmodules": "false"
    },
    "id": "https://github.com/dotnet/dotnet-docker.git",
    "type": "GitHub",
    "name": "dotnet/dotnet-docker",
    "url": "https://github.com/dotnet/dotnet-docker.git",
    "defaultBranch": "master",
    "clean": "true",
    "checkoutSubmodules": false
  },
  "processParameters": {},
  "quality": "definition",
  "queue": {
    "id": 832,
    "name": "DotNetCore-Infra",
    "pool": {
      "id": 135,
      "name": "DotNetCore-Infra"
    }
  },
  "id": 6214,
  "name": "dotnet-docker-linux-arm32v7-images",
  "url": "https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_apis/build/Definitions/6214",
  "path": "\\",
  "type": "build",
  "project": {
    "id": "0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "name": "DevDiv",
    "description": "Build definition for microsoft/dotnet Docker images",
    "url": "https://devdiv.visualstudio.com/_apis/projects/0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "state": "wellFormed",
    "revision": 418097676
  }
}
