parameters:
  imageBuilderLinuxImage: microsoft/dotnet-buildtools-prereqs:image-builder-debian-20180904220918
  imageBuilderWindowsImage: microsoft/dotnet-buildtools-prereqs:image-builder-nanoserver-20180904151412
  testRunnerLinuxImage: microsoft/dotnet-buildtools-prereqs:debian-stretch-docker-testrunner-63f2145-20184325094343
  manifest: manifest.json
  repo: null
phases:
  ################################################################################
  # Initialization - Generate the VSTS build matrix
  ################################################################################
  - phase: GenerateMatrices
    queue:
      name: DotNet-Build
      demands:
        - agent.os -equals linux
    variables:
      imageBuilder.image: ${{ parameters.imageBuilderLinuxImage }}
      manifest: ${{ parameters.manifest }}
      repoVolume: matrix-repo-$(Build.BuildId)
    steps:
      - template: ../steps/docker-init-linux.yml
        parameters:
          image: $(imageBuilder.image)
          repoVolume: $(repoVolume)
      - script: docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $(repoVolume):/repo -w /repo $(imageBuilder.image) generateBuildMatrix --manifest $(manifest) --type build
        name: buildMatrix
      - script: docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $(repoVolume):/repo -w /repo $(imageBuilder.image) generateBuildMatrix --manifest $(manifest) --type test
        name: testMatrix
      - template: ../steps/docker-cleanup-linux.yml

  ################################################################################
  # Build Images
  ################################################################################
  - template: build-linux-amd64.yml
    parameters:
      imageBuilderImage: ${{ parameters.imageBuilderLinuxImage }}
      manifest: ${{ parameters.manifest }}
      repo: ${{ parameters.repo }}
      matrix: $[ dependencies.GenerateMatrices.outputs['buildMatrix.buildMatrixLinuxAmd64'] ]
  - template: build-linux-arm32v7.yml
    parameters:
      imageBuilderImage: ${{ parameters.imageBuilderLinuxImage }}
      manifest: ${{ parameters.manifest }}
      repo: ${{ parameters.repo }}
      matrix: $[ dependencies.GenerateMatrices.outputs['buildMatrix.buildMatrixLinuxArm32v7'] ]
  - template: build-windows-amd64.yml
    parameters:
      phase: Build_NanoServerSac2016_amd64
      imageBuilderImage: ${{ parameters.imageBuilderWindowsImage }}
      manifest: ${{ parameters.manifest }}
      repo: ${{ parameters.repo }}
      osVersion: nanoserver-sac2016
      demands:
        - VSTS_OS -equals Windows_Server_2016_Data_Center_with_Containers
      matrix: $[ dependencies.GenerateMatrices.outputs['buildMatrix.buildMatrixNanoserverSac2016Amd64'] ]
  - template: build-windows-amd64.yml
    parameters:
      phase: Build_NanoServer1709_amd64
      imageBuilderImage: ${{ parameters.imageBuilderWindowsImage }}
      manifest: ${{ parameters.manifest }}
      repo: ${{ parameters.repo }}
      osVersion: nanoserver-1709
      demands:
        - VSTS_OS -equals Windows_Server_2016_Data_Center_RS3
      matrix: $[ dependencies.GenerateMatrices.outputs['buildMatrix.buildMatrixNanoserver1709Amd64'] ]
  - template: build-windows-amd64.yml
    parameters:
      phase: Build_NanoServer1803_amd64
      imageBuilderImage: ${{ parameters.imageBuilderWindowsImage }}
      manifest: ${{ parameters.manifest }}
      repo: ${{ parameters.repo }}
      osVersion: nanoserver-1803
      demands:
        - VSTS_OS -equals Windows_Server_2016_Data_Center_RS4
      matrix: $[ dependencies.GenerateMatrices.outputs['buildMatrix.buildMatrixNanoserver1803Amd64'] ]

  ################################################################################
  # Test Images
  ################################################################################
  - template: test-linux-amd64.yml
    parameters:
      testRunnerLinuxImage: ${{ parameters.testRunnerLinuxImage }}
      repo: ${{ parameters.repo }}
      matrix: $[ dependencies.GenerateMatrices.outputs['testMatrix.testMatrixLinuxAmd64'] ]
  - template: test-linux-arm32v7.yml
    parameters:
      testRunnerLinuxImage: ${{ parameters.testRunnerLinuxImage }}
      repo: ${{ parameters.repo }}
      matrix: $[ dependencies.GenerateMatrices.outputs['testMatrix.testMatrixLinuxArm32v7'] ]
  - template: test-windows-amd64.yml
    parameters:
      phase: Test_NanoServerSac2016_amd64
      repo: ${{ parameters.repo }}
      dependsOn:
        - Build_NanoServerSac2016_amd64
        - GenerateMatrices
      demands:
        - VSTS_OS -equals Windows_Server_2016_Data_Center_with_Containers
      matrix: $[ dependencies.GenerateMatrices.outputs['testMatrix.testMatrixNanoserverSac2016Amd64'] ]
  - template: test-windows-amd64.yml
    parameters:
      phase: Test_NanoServer1709_amd64
      repo: ${{ parameters.repo }}
      dependsOn:
        - Build_NanoServer1709_amd64
        - GenerateMatrices
      demands:
        - VSTS_OS -equals Windows_Server_2016_Data_Center_RS3
      matrix: $[ dependencies.GenerateMatrices.outputs['testMatrix.testMatrixNanoserver1709Amd64'] ]
  - template: test-windows-amd64.yml
    parameters:
      phase: Test_NanoServer1803_amd64
      repo: ${{ parameters.repo }}
      dependsOn:
        - Build_NanoServer1803_amd64
        - GenerateMatrices
      demands:
        - VSTS_OS -equals Windows_Server_2016_Data_Center_RS4
      matrix: $[ dependencies.GenerateMatrices.outputs['testMatrix.testMatrixNanoserver1803Amd64'] ]

  ################################################################################
  # Publish Images
  ################################################################################
  - template: copy-images-linux.yml
    parameters:
      phase: Copy_Images_Linux_amd64
      imageBuilderImage: ${{ parameters.imageBuilderLinuxImage }}
      manifest: ${{ parameters.manifest }}
      repo: ${{ parameters.repo }}
      architecture: amd64
      matrix: $[ dependencies.GenerateMatrices.outputs['buildMatrix.buildMatrixLinuxAmd64'] ]
  - template: copy-images-linux.yml
    parameters:
      phase: Copy_Images_Linux_arm32v7
      imageBuilderImage: ${{ parameters.imageBuilderLinuxImage }}
      manifest: ${{ parameters.manifest }}
      repo: ${{ parameters.repo }}
      architecture: arm
      matrix: $[ dependencies.GenerateMatrices.outputs['buildMatrix.buildMatrixLinuxArm32v7'] ]
  - template: copy-images-windows.yml
    parameters:
      phase: Copy_Images_NanoServerSac2016_amd64
      imageBuilderImage: ${{ parameters.imageBuilderWindowsImage }}
      manifest: ${{ parameters.manifest }}
      repo: ${{ parameters.repo }}
      osVersion: nanoserver-sac2016
      demands:
        - VSTS_OS -equals Windows_Server_2016_Data_Center_with_Containers
      matrix: $[ dependencies.GenerateMatrices.outputs['buildMatrix.buildMatrixNanoserverSac2016Amd64'] ]
  - template: copy-images-windows.yml
    parameters:
      phase: Copy_Images_NanoServer1709_amd64
      imageBuilderImage: ${{ parameters.imageBuilderWindowsImage }}
      manifest: ${{ parameters.manifest }}
      repo: ${{ parameters.repo }}
      osVersion: nanoserver-1709
      demands:
        - VSTS_OS -equals Windows_Server_2016_Data_Center_RS3
      matrix: $[ dependencies.GenerateMatrices.outputs['buildMatrix.buildMatrixNanoserver1709Amd64'] ]
  - template: copy-images-windows.yml
    parameters:
      phase: Copy_Images_NanoServer1803_amd64
      imageBuilderImage: ${{ parameters.imageBuilderWindowsImage }}
      manifest: ${{ parameters.manifest }}
      repo: ${{ parameters.repo }}
      osVersion: nanoserver-1803
      demands:
        - VSTS_OS -equals Windows_Server_2016_Data_Center_RS4
      matrix: $[ dependencies.GenerateMatrices.outputs['buildMatrix.buildMatrixNanoserver1803Amd64'] ]

  - template: publish-finalize.yml
    parameters:
      imageBuilderImage: ${{ parameters.imageBuilderLinuxImage }}
      manifest: ${{ parameters.manifest }}
