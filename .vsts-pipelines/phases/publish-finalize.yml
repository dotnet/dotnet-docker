parameters:
  imageBuilderImage: null
  manifest: null
phases:
  - phase: Publish_Finalize
    condition: and(succeeded('Copy_Images_Linux_amd64'), succeeded('Copy_Images_Linux_arm32v7'), succeeded('Copy_Images_NanoServerSac2016_amd64'), succeeded('Copy_Images_NanoServer1709_amd64'), succeeded('Copy_Images_NanoServer1803_amd64'))
    dependsOn:
      - Copy_Images_Linux_amd64
      - Copy_Images_Linux_arm32v7
      - Copy_Images_NanoServerSac2016_amd64
      - Copy_Images_NanoServer1709_amd64
      - Copy_Images_NanoServer1803_amd64
    queue:
      name: DotNet-Build
      demands:
        - agent.os -equals linux
    variables:
      docker.commonRunArgs: --rm -v /var/run/docker.sock:/var/run/docker.sock -v $(Build.SourcesDirectory):/repo -w /repo $(imageBuilder.image)
      imageBuilder.commonCmdArgs: --manifest $(manifest) --username $(dockerRegistry.userName) --password $(BotAccount-dotnet-dockerhub-bot-password) $(imageBuilder.queueArgs) $(imageBuilder.publishQueueArgs)
      imageBuilder.image: ${{ parameters.imageBuilderImage }}
      manifest: ${{ parameters.manifest }}
    steps:
      - template: ../steps/docker-cleanup-linux.yml
      - script: docker pull $(imageBuilder.image)
        displayName: Pull Image Builder
      - script: docker run $(docker.commonRunArgs) publishManifest $(imageBuilder.commonCmdArgs)
        displayName: Publish Manifest
      - script: docker run $(docker.commonRunArgs) updateReadme $(imageBuilder.commonCmdArgs)
        displayName: Update Readme
      - template: ../steps/docker-cleanup-linux.yml
