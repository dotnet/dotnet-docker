parameters:
  setupImageBuilder:  true

steps:
  ################################################################################
  # Cleanup Docker Resources
  ################################################################################
  - template: docker-cleanup-windows.yml

  ################################################################################
  # Setup Image Builder (Optional)
  ################################################################################
  - ${{ if eq(parameters.setupImageBuilder, 'true') }}:
    - script: echo "##vso[task.setvariable variable=imageBuilder.image]microsoft/dotnet-buildtools-prereqs:image-builder-nanoserver-20180904151412
      displayName: Define imageBuilder.image Variable
    - powershell: $(Build.Repository.LocalPath)/scripts/Invoke-PullImage.ps1 '$(imageBuilder.image)'
      displayName: Pull Image Builder
    - script: docker create --name setupImageBuilder_$(Build.BuildId) $(imageBuilder.image)
      displayName: Create Setup Container
    - script: rmdir /q /s $(Build.BinariesDirectory)\Microsoft.DotNet.ImageBuilder
      displayName: Cleanup Image Builder
      continueOnError: true
    - script: docker cp setupImageBuilder_$(Build.BuildId):/image-builder $(Build.BinariesDirectory)/Microsoft.DotNet.ImageBuilder
      displayName: Copy Image Builder
    - script: docker rm -f setupImageBuilder_$(Build.BuildId)
      displayName: Cleanup Setup Container
      condition: always()
      continueOnError: true
    - script: echo "##vso[task.setvariable variable=runImageBuilderCmd]$(Build.BinariesDirectory)\Microsoft.DotNet.ImageBuilder\Microsoft.DotNet.ImageBuilder.exe
      displayName: Define runImageBuilderCmd Variable
