parameters:
  isPullRequestBuild: false
steps:
- powershell: |
    if ("${{ parameters.isPullRequestBuild }}" -eq "false") {
      $optionalTestArgs="-Registry $env:ACR_SERVER -RepoPrefix $env:STAGINGREPOPREFIX"
    } else {
      $optionalTestArgs="-IsLocalRun"
    }
    echo "##vso[task.setvariable variable=optionalTestArgs]$optionalTestArgs"
  displayName: Set Test Variables
- ${{ if eq(parameters.isPullRequestBuild, 'false') }}:
  - template: init-docker-windows.yml
    parameters:
      setupImageBuilder: false
- ${{ if eq(parameters.isPullRequestBuild, 'false') }}:
  - script: docker login -u $(acr.userName) -p $(BotAccount-dotnet-docker-acr-bot-password) $(acr.server)
    displayName: Docker login
- powershell: Get-ChildItem -Path tests -r | Where {$_.Extension -match "trx"} | Remove-Item
  displayName: Cleanup Old Test Results
- powershell: >
    ./tests/run-tests.ps1
    -VersionFilter $(dotnetVersion)*
    -OSFilter $(osVariant)
    $(optionalTestArgs)
  displayName: Test Images
- ${{ if eq(parameters.isPullRequestBuild, 'false') }}:
  - script: docker logout $(acr.server)
    displayName: Docker logout
    condition: always()
    continueOnError: true
- task: PublishTestResults@2
  displayName: Publish Test Results
  condition: always()
  continueOnError: true
  inputs:
    testRunner: vSTest
    testResultsFiles: 'tests/**/*.trx'
    mergeTestResults: true
    publishRunAttachments: true
    testRunTitle: Windows $(dotnetVersion) $(osVariant) amd64
- ${{ if eq(parameters.isPullRequestBuild, 'false') }}:
  - template: cleanup-docker-windows.yml
