parameters:
  pool: {}
  matrix: {}
jobs:
- job: Copy_Images
  condition: "
    and(
      ${{ parameters.matrix }},
      or(
        eq(variables['singlePhase'], 'publish'),
        and(
          eq(variables['singlePhase'], ''),
          or(
            succeeded(),
            and(
              contains(variables['manifest'], 'samples'),
              eq(variables['singlePhase'], ''),
              succeeded('Build_Linux_amd64'),
              succeeded('Build_Linux_arm32v7'),
              succeeded('Build_NanoServer1709_amd64'),
              succeeded('Build_NanoServer1803_amd64'),
              succeeded('Build_NanoServer1809_amd64'),
              succeeded('Build_NanoServer1809_arm32'))))))"
  dependsOn:
  - GenerateMatrices
  - Test_Linux_amd64
  - Test_Linux_arm64v8
  - Test_Linux_arm32v7
  - Test_NanoServer1709_amd64
  - Test_NanoServer1803_amd64
  - Test_NanoServer1809_amd64
  - Test_NanoServer1809_arm32
  pool: ${{ parameters.pool }}
  strategy:
    matrix: $[ ${{ parameters.matrix }} ]
  steps:
  - template: ../steps/init-docker-linux.yml
  - script: >
      $(runImageBuilderCmd) copyAcrImages
      --manifest $(manifest)
      $(imageBuilderPaths)
      --os-type $(osType)
      --os-version "$(osVersion)"
      --architecture $(architecture)
      --registry-override $(acr.server)
      --repo-prefix $(publishRepoPrefix)
      $(imageBuilder.queueArgs)
      $(stagingRepoPrefix)
      $(acr.servicePrincipalName)
      $(app-dotnetdockerbuild-client-secret)
      $(acr.servicePrincipalTenant)
      $(acr.subscription)
    displayName: Copy Images
  - template: ../steps/cleanup-docker-linux.yml
