parameters:
  name: null
  matrix: {}
  dockerServerDemands: []
  useRemoteDockerServer: false
jobs:
  - job: ${{ parameters.name }}
    condition: or(and(succeeded(), eq(variables['singlePhase'], '')), eq(variables['singlePhase'], 'build'))
    dependsOn: GenerateMatrices
    pool:
      ${{ if eq(parameters.useRemoteDockerServer, 'false') }}:
        name: DotNet-Build
      ${{ if eq(parameters.useRemoteDockerServer, 'true') }}:
        name: DotNetCore-Infra
      demands:
        - agent.os -equals linux
        - ${{ parameters.dockerServerDemands }}
    strategy:
      matrix: ${{ parameters.matrix }}
    workspace:
      clean: all
    steps:
      - template: ../steps/init-docker-linux.yml
        parameters:
          setupRemoteDockerServer: ${{ parameters.useRemoteDockerServer }}
      - script: $(runImageBuilderCmd) build --manifest $(manifest) $(imageBuilderPaths) --repo-override microsoft/$(repo)=$(acr.server)/$(repo)-$(stagingRepo.suffix) --skip-test --push --server $(acr.server) --username $(acr.userName) --password $(BotAccount-dotnet-docker-acr-bot-password) $(imageBuilder.queueArgs)
        displayName: Build Images
      - template: ../steps/cleanup-docker-linux.yml
        parameters:
          cleanupRemoteDockerServer: ${{ parameters.useRemoteDockerServer }}
