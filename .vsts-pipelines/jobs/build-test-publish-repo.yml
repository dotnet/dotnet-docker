parameters:
  buildMatrixType: platformDependencyGraph
  testMatrixType: platformVersionedOs
  publishMatrixType: dependencyGraph

jobs:
  ################################################################################
  # Initialization - Generate the VSTS build matrix
  ################################################################################
- job: GenerateMatrices
  pool: # linuxAmd64Pool
    name: Hosted Ubuntu 1604
  steps:
  - template: ../steps/init-docker-linux.yml
  - template: ../steps/generate-matrix.yml
    parameters:
      matrixType: ${{ parameters.buildMatrixType }}
      name: buildMatrix
  - template: ../steps/generate-matrix.yml
    parameters:
      matrixType: ${{ parameters.testMatrixType }}
      name: testMatrix
  - template: ../steps/generate-matrix.yml
    parameters:
      matrixType: ${{ parameters.publishMatrixType }}
      name: publishMatrix
  - template: ../steps/cleanup-docker-linux.yml

  ################################################################################
  # Build Images
  ################################################################################
- template: build-images.yml
  parameters:
    name: Build_Linux_amd64
    pool: # linuxAmd64Pool
      name: Hosted Ubuntu 1604
    matrix: dependencies.GenerateMatrices.outputs['${{ format('buildMatrix.{0}MatrixLinuxAmd64', parameters.buildMatrixType) }}']
    dockerClientOS: linux
- template: build-images.yml
  parameters:
    name: Build_Linux_arm64v8
    pool: # linuxArm64v8Pool
      name: DotNetCore-Docker
      demands:
      - agent.os -equals linux
      - RemoteDockerServerOS -equals linux
      - RemoteDockerServerArch -equals aarch64
    matrix: dependencies.GenerateMatrices.outputs['${{ format('buildMatrix.{0}MatrixLinuxArm64v8', parameters.buildMatrixType) }}']
    useRemoteDockerServer: true
    dockerClientOS: linux
- template: build-images.yml
  parameters:
    name: Build_Linux_arm32v7
    pool: # linuxArm32v7Pool
      name: DotNetCore-Docker
      demands:
      - agent.os -equals linux
      - RemoteDockerServerOS -equals linux
      - RemoteDockerServerArch -equals aarch64
    matrix: dependencies.GenerateMatrices.outputs['${{ format('buildMatrix.{0}MatrixLinuxArm32v7', parameters.buildMatrixType) }}']
    dockerClientOS: linux
    useRemoteDockerServer: true
- template: build-images.yml
  parameters:
    name: Build_NanoServer1709_amd64
    pool: # windows1709Amd64Pool
      name: DotNetCore-Docker
      demands: VSTS_OS -equals Windows_Server_2016_Data_Center_RS3
    matrix: dependencies.GenerateMatrices.outputs['${{ format('buildMatrix.{0}MatrixNanoserver1709Amd64', parameters.buildMatrixType) }}']
    dockerClientOS: windows
- template: build-images.yml
  parameters:
    name: Build_NanoServer1803_amd64
    pool: # windows1803Amd64Pool
      name: DotNetCore-Docker
      demands: VSTS_OS -equals Windows_Server_2016_Data_Center_RS4
    matrix: dependencies.GenerateMatrices.outputs['${{ format('buildMatrix.{0}MatrixNanoserver1803Amd64', parameters.buildMatrixType) }}']
    dockerClientOS: windows
- template: build-images.yml
  parameters:
    name: Build_NanoServer1809_amd64
    pool: # windows1809Amd64
      name: DotNetCore-Docker
      demands: VSTS_OS -equals Windows_Server_2019_Data_Center_RS5
    matrix: dependencies.GenerateMatrices.outputs['${{ format('buildMatrix.{0}MatrixNanoserver1809Amd64', parameters.buildMatrixType) }}']
    dockerClientOS: windows
- template: build-images.yml
  parameters:
    name: Build_NanoServer1809_arm32
    pool: # nanoServer1809Arm32Pool
      name: DotNetCore-Docker
      demands:
      - agent.os -equals linux
      - RemoteDockerServerOS -equals nanoserver-1809
      - RemoteDockerServerArch -equals arm32
    matrix: dependencies.GenerateMatrices.outputs['${{ format('buildMatrix.{0}MatrixNanoserver1809Arm32', parameters.buildMatrixType) }}']
    dockerClientOS: linux
    useRemoteDockerServer: true

  ################################################################################
  # Test Images
  ################################################################################
- template: test-images-linux-client.yml
  parameters:
    name: Test_Linux_amd64
    buildDependencies: Build_Linux_amd64
    pool: # linuxAmd64Pool
      name: Hosted Ubuntu 1604
    matrix: dependencies.GenerateMatrices.outputs['${{ format('testMatrix.{0}MatrixLinuxAmd64', parameters.testMatrixType) }}']
- template: test-images-linux-client.yml
  parameters:
    name: Test_Linux_arm64v8
    buildDependencies: Build_Linux_arm64v8
    pool: # linuxArm64v8Pool
      name: DotNetCore-Docker
      demands:
      - agent.os -equals linux
      - RemoteDockerServerOS -equals linux
      - RemoteDockerServerArch -equals aarch64
    matrix: dependencies.GenerateMatrices.outputs['${{ format('testMatrix.{0}MatrixLinuxArm64v8', parameters.testMatrixType) }}']
    useRemoteDockerServer: true
- template: test-images-linux-client.yml
  parameters:
    name: Test_Linux_arm32v7
    buildDependencies: Build_Linux_arm32v7
    pool: # linuxArm32v7Pool
      name: DotNetCore-Docker
      demands:
      - agent.os -equals linux
      - RemoteDockerServerOS -equals linux
      - RemoteDockerServerArch -equals aarch64
    matrix: dependencies.GenerateMatrices.outputs['${{ format('testMatrix.{0}MatrixLinuxArm32v7', parameters.testMatrixType) }}']
    useRemoteDockerServer: true
- template: test-images-windows-client.yml
  parameters:
    name: Test_NanoServer1709_amd64
    buildDependencies: Build_NanoServer1709_amd64
    pool: # windows1709Amd64Pool
      name: DotNetCore-Docker
      demands: VSTS_OS -equals Windows_Server_2016_Data_Center_RS3
    matrix: dependencies.GenerateMatrices.outputs['${{ format('testMatrix.{0}MatrixNanoserver1709Amd64', parameters.testMatrixType) }}']
- template: test-images-windows-client.yml
  parameters:
    name: Test_NanoServer1803_amd64
    buildDependencies: Build_NanoServer1803_amd64
    pool: # windows1803Amd64Pool
      name: DotNetCore-Docker
      demands: VSTS_OS -equals Windows_Server_2016_Data_Center_RS4
    matrix: dependencies.GenerateMatrices.outputs['${{ format('testMatrix.{0}MatrixNanoserver1803Amd64', parameters.testMatrixType) }}']
- template: test-images-windows-client.yml
  parameters:
    name: Test_NanoServer1809_amd64
    buildDependencies: Build_NanoServer1809_amd64
    pool: # windows1809Amd64
      name: DotNetCore-Docker
      demands: VSTS_OS -equals Windows_Server_2019_Data_Center_RS5
    matrix: dependencies.GenerateMatrices.outputs['${{ format('testMatrix.{0}MatrixNanoserver1809Amd64', parameters.testMatrixType) }}']
- template: test-images-linux-client.yml
  parameters:
    name: Test_NanoServer1809_arm32
    buildDependencies: Build_NanoServer1809_arm32
    pool: # nanoServer1809Arm32Pool
      name: DotNetCore-Docker
      demands:
      - agent.os -equals linux
      - RemoteDockerServerOS -equals nanoserver-1809
      - RemoteDockerServerArch -equals arm32
    matrix: dependencies.GenerateMatrices.outputs['${{ format('testMatrix.{0}MatrixNanoserver1809Arm32', parameters.testMatrixType) }}']
    useRemoteDockerServer: true

  ################################################################################
  # Publish Images
  ################################################################################
- template: copy-images.yml
  parameters:
    pool: # linuxAmd64Pool
      name: Hosted Ubuntu 1604
    matrix: dependencies.GenerateMatrices.outputs['${{ format('publishMatrix.{0}Matrix', parameters.publishMatrixType) }}']

- template: publish-finalize.yml
  parameters:
    pool: # linuxAmd64Pool
      name: Hosted Ubuntu 1604
